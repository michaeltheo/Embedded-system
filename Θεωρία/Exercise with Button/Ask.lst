CCS PCH C Compiler, Version 5.011, 5967               06-¡Ò-21 16:56

               Filename:   F:\Embedded Systems\»Â˘Òﬂ·\Exercise with Button\Ask.lst

               ROM used:   116 bytes (0%)
                           Largest free fragment is 30600
               RAM used:   4 (0%) at main() level
                           5 (0%) worst case
               Stack used: 2 locations
               Stack size: 31

*
0800:  GOTO   0854
.................... // ŒùŒ± Œ≥œÅŒ±œÜŒµŒØ œÄœÅœåŒ≥œÅŒ±ŒºŒºŒ± ŒºŒµ œÑŒø ŒøœÄŒøŒØŒø Œ∫Œ¨Œ∏Œµ œÜŒøœÅŒ¨ œÄŒøœÖ  
.................... // œÄŒ±œÑŒ¨ŒºŒµ Œ≠ŒΩŒ± ŒºœÄŒøœÖœÑœåŒΩ œÑŒø ŒøœÄŒøŒØŒø ŒµŒØŒΩŒ±Œπ œÉœÖŒΩŒ¥ŒµŒ¥ŒµŒºŒ≠ŒΩŒøœÑŒøŒΩ Œ±Œ∫œÅŒøŒ¥Œ≠Œ∫œÑŒ∑  
.................... // RB4 œÑŒ∑œÇ œÄœåœÅœÑŒ±œÇ Œí œÑŒø œÄŒµœÅŒπŒµœáœåŒºŒµŒΩŒø œÑŒ∑œÇ œÄœåœÅœÑŒ±œÇ D Œ±œÖŒæŒ¨ŒΩŒµœÑŒ±Œπ Œ∫Œ±œÑŒ¨ 1. 
.................... // Œ§Œø Œ±œÄŒøœÑŒ≠ŒªŒµœÉŒºŒ± œÑŒ∑œÇ Œ±œçŒæŒ∑œÉŒ∑œÇ ŒΩŒ± œÜŒ±ŒØŒΩŒµœÑŒ±Œπ œÉŒµ 8 LED  œÑŒ± ŒøœÄŒøŒØŒ± ŒµŒØŒΩŒ±Œπ œÉœÖŒΩŒ¥ŒµŒ¥ŒµŒºŒ≠ŒΩŒ±  
.................... // œÉœÑŒ∑ŒΩ œÄœåœÅœÑŒ± D œÑŒøœÖ ŒºŒπŒ∫œÅŒøŒµŒªŒµŒ≥Œ∫œÑŒÆ.  
.................... // ŒùŒ± œáœÅŒ∑œÉŒøŒºŒøœÄŒøŒπŒ∑Œ∏ŒµŒØ œÉœÖŒΩŒ¨œÅœÑŒ∑œÉŒ∑ ŒºŒµ œÑŒ∑ŒΩ ŒøœÄŒøŒØŒ± ŒµŒªŒ≠Œ≥œáŒµœÑŒ±Œπ œåœÑŒπ œÄŒ±œÑŒÆŒ∏Œ∑Œ∫Œµ œÑŒø ŒºœÄŒøœÖœÑœåŒΩ.  
.................... // Œ£œÑŒ∑ œÉœÖŒΩŒ¨œÅœÑŒ∑œÉŒ∑ ŒΩŒ± Œ¥ŒøŒ∏ŒµŒØ œÑŒø œåŒΩŒøŒºŒ± push_button. 
....................  
.................... #include <main.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #DEVICE HIGH_INTS=TRUE 
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                     //No Watch Dog Timer 
.................... #FUSES WDT32768                    //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HSPLL                     //High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES NOPROTECT                 //Code not protected from reading 
.................... #FUSES BROWNOUT                //No brownout reset 
.................... //#FUSES BORV20                    //Brownout reset at 2.0V 
.................... #FUSES NOPUT                     //No Power Up Timer 
.................... #FUSES NOCPD                     //No EE protection 
.................... #FUSES STVREN                    //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                   //No Debug mode for ICD 
.................... #FUSES NOLVP                     //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                     //Program memory not write protected 
.................... #FUSES NOWRTD                    //Data EEPROM not write protected 
.................... #FUSES NOIESO                      //Internal External Switch Over mode enabled 
.................... #FUSES NOFCMEN                     //Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN                 ///PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                    //configuration not registers write protected 
.................... #FUSES NOWRTB                    //Boot block not write protected 
.................... #FUSES NOEBTR                    //Memory not protected from table reads 
.................... #FUSES NOEBTRB                   //Boot block not protected from table reads 
.................... #FUSES NOCPB                     //No Boot Block code protection 
.................... #FUSES MCLR                      //Master Clear pin enabled 
.................... #FUSES NOLPT1OSC                   //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                   //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL5                      //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV1                   //System Clock by 2 
.................... #FUSES USBDIV                    //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                    //USB voltage regulator enabled 
.................... #FUSES ICPRT                     //ICPRT enabled 
.................... #FUSES WRTB 
.................... #FUSES NOICPRT  
.................... #FUSES NOLPT1OSC 
.................... #FUSES CCP2B3  
.................... #FUSES NOCPB 
.................... #FUSES NOCPD 
.................... #FUSES NOWRTC 
.................... #FUSES NOWRTD 
.................... #FUSES NOEBTR 
.................... #FUSES NOEBTRB               
....................  
.................... /* systm clock is 48 MHz */ 
.................... #use delay(clock=48000000,RESTART_WDT) 
*
0808:  CLRF   FEA
080A:  MOVLW  05
080C:  MOVWF  FE9
080E:  MOVF   FEF,W
0810:  BZ    0832
0812:  MOVLW  0F
0814:  MOVWF  01
0816:  MOVLW  BF
0818:  MOVWF  00
081A:  CLRWDT
081C:  DECFSZ 00,F
081E:  BRA    081A
0820:  DECFSZ 01,F
0822:  BRA    0816
0824:  MOVLW  8F
0826:  MOVWF  00
0828:  DECFSZ 00,F
082A:  BRA    0828
082C:  CLRWDT
082E:  DECFSZ FEF,F
0830:  BRA    0812
0832:  RETURN 0
.................... /* --- BEGIN: changes required for bootloader ------------------------------ */ 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* map reset vector and interrupt vector                                     */ 
.................... /* 0x000-0x7FF is used by the bootloader. The bootloader maps the original   */ 
.................... /* reset vecotr (0x000) to 0x800 and the reset vector (0x008) to 0x800.      */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... #build (reset=0x800, interrupt=0x808) 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* reserve boot block area                                                   */ 
.................... /* This memory range is used by the bootloader, so the application must not  */ 
.................... /* use this area.                                                            */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... #org 0, 0x7FF {} 
....................  
.................... /* --- END: changes required for bootloader -------------------------------- */ 
....................  
....................  
....................  
....................  
....................  
....................  
.................... #byte PORTD=0xF83 
.................... #byte PORTB=0xF81 
....................  
.................... void pushbutton(void); 
....................  
.................... void main(){ 
*
0854:  CLRF   FF8
0856:  BSF    FD0.7
0858:  MOVF   FC1,W
085A:  ANDLW  C0
085C:  IORLW  0F
085E:  MOVWF  FC1
0860:  MOVLW  07
0862:  MOVWF  FB4
....................     set_tris_d(0x00); 
0864:  MOVLW  00
0866:  MOVWF  F95
....................     set_tris_b(0xFF); 
0868:  MOVLW  FF
086A:  MOVWF  F93
....................     PORTD=0x00; 
086C:  CLRF   F83
....................  
....................     while (TRUE) 
....................     { 
....................         pushbutton(); 
086E:  BRA    0834
....................         PORTD=PORTD+1; 
0870:  MOVLW  01
0872:  ADDWF  F83,F
0874:  BRA    086E
....................     } 
.................... } 
....................  
0876:  SLEEP 
.................... void pushbutton(void){ 
....................     while (input(PIN_B4)==1) 
*
0834:  BSF    F93.4
0836:  BTFSS  F81.4
0838:  BRA    083C
....................     { 
083A:  BRA    0834
....................     } 
....................     delay_ms(50); 
083C:  MOVLW  32
083E:  MOVWF  05
0840:  RCALL  0808
....................     while (input(PIN_B4)==0) 
0842:  BSF    F93.4
0844:  BTFSC  F81.4
0846:  BRA    084A
....................     { 
0848:  BRA    0842
....................     } 
....................     delay_ms(50);  
084A:  MOVLW  32
084C:  MOVWF  05
084E:  RCALL  0808
0850:  GOTO   0870 (RETURN)
.................... } 

Configuration Fuses:
   Word  1: 0E24   PLL5 CPUDIV1 USBDIV HSPLL NOFCMEN NOIESO
   Word  2: 1E3F   NOPUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8000   CCP2B3 NOPBADEN NOLPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP ICSP1 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: A00F   NOWRT NOWRTC WRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
