CCS PCH C Compiler, Version 5.011, 5967               10-Μαρ-21 10:34

               Filename:   F:\Embedded Systems\ExerciseTheoria00\exercisetheoria00.lst

               ROM used:   124 bytes (0%)
                           Largest free fragment is 30592
               RAM used:   5 (0%) at main() level
                           6 (0%) worst case
               Stack used: 1 locations
               Stack size: 31

*
0800:  GOTO   0834
.................... #include <main.h> //Ο„ΞµΟƒΟ„ Ξ±Ο…Ο„ΞΏ ΞµΞΉΞ½Ξ±ΞΉ ΞµΞ½Ξ± Ο„ΞµΟƒΟ„ 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #DEVICE HIGH_INTS=TRUE 
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                     //No Watch Dog Timer 
.................... #FUSES WDT32768                    //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HSPLL                     //High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES NOPROTECT                 //Code not protected from reading 
.................... #FUSES BROWNOUT                //No brownout reset 
.................... //#FUSES BORV20                    //Brownout reset at 2.0V 
.................... #FUSES NOPUT                     //No Power Up Timer 
.................... #FUSES NOCPD                     //No EE protection 
.................... #FUSES STVREN                    //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                   //No Debug mode for ICD 
.................... #FUSES NOLVP                     //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                     //Program memory not write protected 
.................... #FUSES NOWRTD                    //Data EEPROM not write protected 
.................... #FUSES NOIESO                      //Internal External Switch Over mode enabled 
.................... #FUSES NOFCMEN                     //Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN                 ///PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                    //configuration not registers write protected 
.................... #FUSES NOWRTB                    //Boot block not write protected 
.................... #FUSES NOEBTR                    //Memory not protected from table reads 
.................... #FUSES NOEBTRB                   //Boot block not protected from table reads 
.................... #FUSES NOCPB                     //No Boot Block code protection 
.................... #FUSES MCLR                      //Master Clear pin enabled 
.................... #FUSES NOLPT1OSC                   //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                   //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL5                      //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV1                   //System Clock by 2 
.................... #FUSES USBDIV                    //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                    //USB voltage regulator enabled 
.................... #FUSES ICPRT                     //ICPRT enabled 
.................... #FUSES WRTB 
.................... #FUSES NOICPRT  
.................... #FUSES NOLPT1OSC 
.................... #FUSES CCP2B3  
.................... #FUSES NOCPB 
.................... #FUSES NOCPD 
.................... #FUSES NOWRTC 
.................... #FUSES NOWRTD 
.................... #FUSES NOEBTR 
.................... #FUSES NOEBTRB               
....................  
.................... /* systm clock is 48 MHz */ 
.................... #use delay(clock=48000000,RESTART_WDT) 
*
0808:  CLRF   FEA
080A:  MOVLW  06
080C:  MOVWF  FE9
080E:  MOVF   FEF,W
0810:  BZ    0832
0812:  MOVLW  0F
0814:  MOVWF  01
0816:  MOVLW  BF
0818:  MOVWF  00
081A:  CLRWDT
081C:  DECFSZ 00,F
081E:  BRA    081A
0820:  DECFSZ 01,F
0822:  BRA    0816
0824:  MOVLW  8F
0826:  MOVWF  00
0828:  DECFSZ 00,F
082A:  BRA    0828
082C:  CLRWDT
082E:  DECFSZ FEF,F
0830:  BRA    0812
0832:  RETURN 0
.................... /* --- BEGIN: changes required for bootloader ------------------------------ */ 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* map reset vector and interrupt vector                                     */ 
.................... /* 0x000-0x7FF is used by the bootloader. The bootloader maps the original   */ 
.................... /* reset vecotr (0x000) to 0x800 and the reset vector (0x008) to 0x800.      */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... #build (reset=0x800, interrupt=0x808) 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* reserve boot block area                                                   */ 
.................... /* This memory range is used by the bootloader, so the application must not  */ 
.................... /* use this area.                                                            */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... #org 0, 0x7FF {} 
....................  
.................... /* --- END: changes required for bootloader -------------------------------- */ 
....................  
....................  
....................  
....................  
....................  
.................... //τεστ στα ελληνικά 
.................... //τεστ στα ελληνικκααα 
.................... //ελληνικα τεστ 
....................  
.................... #byte PORTB=0xF81 
....................  
....................  
.................... void main(){ 
0834:  CLRF   FF8
0836:  BSF    FD0.7
0838:  MOVF   FC1,W
083A:  ANDLW  C0
083C:  IORLW  0F
083E:  MOVWF  FC1
0840:  MOVLW  07
0842:  MOVWF  FB4
....................  
.................... int8 i; 
.................... set_tris_b(0x00); 
0844:  MOVLW  00
0846:  MOVWF  F93
.................... PORTB=0b10000000; 
0848:  MOVLW  80
084A:  MOVWF  F81
.................... while (TRUE) 
.................... { 
....................     for ( i = 1; i <=7 ; i++) 
084C:  MOVLW  01
084E:  MOVWF  05
0850:  MOVF   05,W
0852:  SUBLW  07
0854:  BNC   0864
....................     { 
....................         delay_ms(100); 
0856:  MOVLW  64
0858:  MOVWF  06
085A:  RCALL  0808
....................         PORTB=PORTB/2; 
085C:  BCF    FD8.0
085E:  RRCF   F81,F
0860:  INCF   05,F
0862:  BRA    0850
....................     } 
....................     for ( i = 7; i >= 1; i--) 
0864:  MOVLW  07
0866:  MOVWF  05
0868:  MOVF   05,W
086A:  SUBLW  00
086C:  BC    087C
....................     { 
....................         delay_ms(100); 
086E:  MOVLW  64
0870:  MOVWF  06
0872:  RCALL  0808
....................         PORTB=PORTB*2; 
0874:  BCF    FD8.0
0876:  RLCF   F81,F
0878:  DECF   05,F
087A:  BRA    0868
....................     } 
087C:  BRA    084C
.................... } 
....................  
.................... } 
087E:  SLEEP 

Configuration Fuses:
   Word  1: 0E24   PLL5 CPUDIV1 USBDIV HSPLL NOFCMEN NOIESO
   Word  2: 1E3F   NOPUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8000   CCP2B3 NOPBADEN NOLPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP ICSP1 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: A00F   NOWRT NOWRTC WRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
