CCS PCH C Compiler, Version 5.011, 5967               08-Απρ-21 13:13

               Filename:   F:\Embedded Systems\Εργαστηριο\Εργαστήριο 3\ASK kSapou\sapou.lst

               ROM used:   514 bytes (2%)
                           Largest free fragment is 31418
               RAM used:   42 (2%) at main() level
                           49 (2%) worst case
               Stack used: 3 locations (1 in main + 2 for interrupts)
               Stack size: 30

*
0000:  GOTO   01C2
*
0008:  GOTO   00A6
000C:  NOP   
000E:  NOP   
0010:  NOP   
0012:  NOP   
0014:  NOP   
0016:  NOP   
0018:  MOVWF  04
001A:  MOVFF  FD8,05
001E:  MOVFF  FE0,06
0022:  MOVLB  0
0024:  MOVFF  FE9,0C
0028:  MOVFF  FEA,07
002C:  MOVFF  FE1,08
0030:  MOVFF  FE2,09
0034:  MOVFF  FD9,0A
0038:  MOVFF  FDA,0B
003C:  MOVFF  FF3,12
0040:  MOVFF  FF4,13
0044:  MOVFF  FFA,14
0048:  MOVFF  00,0E
004C:  MOVFF  01,0F
0050:  MOVFF  02,10
0054:  MOVFF  03,11
0058:  BTFSS  FF0.3
005A:  GOTO   0064
005E:  BTFSC  FF0.0
0060:  GOTO   0160
0064:  MOVFF  0E,00
0068:  MOVFF  0F,01
006C:  MOVFF  10,02
0070:  MOVFF  11,03
0074:  MOVFF  0C,FE9
0078:  MOVFF  07,FEA
007C:  BSF    07.7
007E:  MOVFF  08,FE1
0082:  MOVFF  09,FE2
0086:  MOVFF  0A,FD9
008A:  MOVFF  0B,FDA
008E:  MOVFF  12,FF3
0092:  MOVFF  13,FF4
0096:  MOVFF  14,FFA
009A:  MOVF   04,W
009C:  MOVFF  06,FE0
00A0:  MOVFF  05,FD8
00A4:  RETFIE 0
00A6:  MOVWF  17
00A8:  MOVFF  FD8,18
00AC:  MOVFF  FE0,19
00B0:  MOVLB  0
00B2:  MOVFF  FE9,1F
00B6:  MOVFF  FEA,1A
00BA:  MOVFF  FE1,1B
00BE:  MOVFF  FE2,1C
00C2:  MOVFF  FD9,1D
00C6:  MOVFF  FDA,1E
00CA:  MOVFF  FF3,25
00CE:  MOVFF  FF4,26
00D2:  MOVFF  FFA,27
00D6:  MOVFF  00,21
00DA:  MOVFF  01,22
00DE:  MOVFF  02,23
00E2:  MOVFF  03,24
00E6:  BTFSS  FF0.4
00E8:  GOTO   00F2
00EC:  BTFSC  FF0.1
00EE:  GOTO   0184
00F2:  MOVFF  21,00
00F6:  MOVFF  22,01
00FA:  MOVFF  23,02
00FE:  MOVFF  24,03
0102:  MOVFF  1F,FE9
0106:  MOVFF  1A,FEA
010A:  BSF    1A.7
010C:  MOVFF  1B,FE1
0110:  MOVFF  1C,FE2
0114:  MOVFF  1D,FD9
0118:  MOVFF  1E,FDA
011C:  MOVFF  25,FF3
0120:  MOVFF  26,FF4
0124:  MOVFF  27,FFA
0128:  MOVF   17,W
012A:  MOVFF  19,FE0
012E:  MOVFF  18,FD8
0132:  RETFIE 0
.................... #include <main-proteus.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #DEVICE HIGH_INTS=TRUE 
....................  #device icd=2 
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                     //No Watch Dog Timer 
.................... #FUSES WDT32768                    //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HSPLL                     //High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES NOPROTECT                 //Code not protected from reading 
.................... #FUSES BROWNOUT                //No brownout reset 
.................... //#FUSES BORV20                    //Brownout reset at 2.0V 
.................... #FUSES NOPUT                     //No Power Up Timer 
.................... #FUSES NOCPD                     //No EE protection 
.................... #FUSES STVREN                    //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                   //No Debug mode for ICD 
.................... #FUSES NOLVP                     //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                     //Program memory not write protected 
.................... #FUSES NOWRTD                    //Data EEPROM not write protected 
.................... #FUSES NOIESO                      //Internal External Switch Over mode enabled 
.................... #FUSES NOFCMEN                     //Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN                 ///PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                    //configuration not registers write protected 
.................... #FUSES NOWRTB                    //Boot block not write protected 
.................... #FUSES NOEBTR                    //Memory not protected from table reads 
.................... #FUSES NOEBTRB                   //Boot block not protected from table reads 
.................... #FUSES NOCPB                     //No Boot Block code protection 
.................... #FUSES MCLR                      //Master Clear pin enabled 
.................... #FUSES NOLPT1OSC                   //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                   //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL5                      //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV1                   //System Clock by 2 
.................... #FUSES USBDIV                    //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                    //USB voltage regulator enabled 
.................... //#FUSES ICPRT                     //ICPRT enabled 
.................... #FUSES WRTB 
.................... #FUSES NOICPRT  
.................... #FUSES NOLPT1OSC 
.................... #FUSES CCP2B3  
.................... #FUSES NOCPB 
.................... #FUSES NOCPD 
.................... #FUSES NOWRTC 
.................... #FUSES NOWRTD 
.................... #FUSES NOEBTR 
.................... #FUSES NOEBTRB               
....................  
.................... /* systm clock is 48 MHz */ 
.................... #use delay(clock=48000000,RESTART_WDT) 
0134:  CLRF   FEA
0136:  MOVLW  30
0138:  MOVWF  FE9
013A:  MOVF   FEF,W
013C:  BZ    015E
013E:  MOVLW  0F
0140:  MOVWF  01
0142:  MOVLW  BF
0144:  MOVWF  00
0146:  CLRWDT
0148:  DECFSZ 00,F
014A:  BRA    0146
014C:  DECFSZ 01,F
014E:  BRA    0142
0150:  MOVLW  8F
0152:  MOVWF  00
0154:  DECFSZ 00,F
0156:  BRA    0154
0158:  CLRWDT
015A:  DECFSZ FEF,F
015C:  BRA    013E
015E:  RETURN 0
.................... /* --- BEGIN: changes required for bootloader ------------------------------ */ 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* map reset vector and interrupt vector                                     */ 
.................... /* 0x000-0x7FF is used by the bootloader. The bootloader maps the original   */ 
.................... /* reset vecotr (0x000) to 0x800 and the reset vector (0x008) to 0x800.      */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... #build (reset=0x000, interrupt=0x008) 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* reserve boot block area                                                   */ 
.................... /* This memory range is used by the bootloader, so the application must not  */ 
.................... /* use this area.                                                            */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#org 0  , 0x000 {} 
....................  
.................... /* --- END: changes required for bootloader -------------------------------- */ 
....................  
....................  
....................  
....................  
....................  
....................  
.................... #byte PORTD=0xF83 
.................... #byte PORTB=0xF81 
....................  
....................  
....................  
....................  
....................  
.................... void init(void); 
.................... void ext_int1(void); 
.................... void ext_int2(void); 
....................  
....................  
....................  
.................... void main(void) 
*
01C2:  CLRF   FF8
01C4:  BCF    FF0.6
01C6:  BSF    FF0.7
01C8:  BSF    FD0.7
01CA:  BSF    07.7
01CC:  MOVF   FC1,W
01CE:  ANDLW  C0
01D0:  IORLW  0F
01D2:  MOVWF  FC1
01D4:  MOVLW  07
01D6:  MOVWF  FB4
.................... { 
....................     init(); 
01D8:  BRA    01A8
....................     while(TRUE) 
....................     { 
....................         output_toggle(PIN_D5); 
01DA:  BCF    F95.5
01DC:  BTG    F8C.5
....................         delay_ms(500); 
01DE:  MOVLW  02
01E0:  MOVWF  29
01E2:  CLRF   16
01E4:  BTFSC  FF2.6
01E6:  BSF    16.6
01E8:  BCF    FF2.6
01EA:  BTFSC  FF2.7
01EC:  BSF    16.7
01EE:  BCF    FF2.7
01F0:  MOVLW  FA
01F2:  MOVWF  30
01F4:  RCALL  0134
01F6:  BTFSC  16.6
01F8:  BSF    FF2.6
01FA:  BTFSC  16.7
01FC:  BSF    FF2.7
01FE:  DECFSZ 29,F
0200:  BRA    01E2
0202:  BRA    01DA
....................     } 
.................... } 
....................  
....................  
....................  
.................... #INT_EXT1  
.................... void ext_int1() 
0204:  BRA    0204
.................... { 
....................    for(int8 i=0;i<10;i++){ 
*
0160:  CLRF   2B
0162:  MOVF   2B,W
0164:  SUBLW  09
0166:  BNC   017E
....................        output_toggle(PIN_D0); 
0168:  BCF    F95.0
016A:  BTG    F8C.0
....................         delay_ms(1000); 
016C:  MOVLW  04
016E:  MOVWF  2C
0170:  MOVLW  FA
0172:  MOVWF  30
0174:  RCALL  0134
0176:  DECFSZ 2C,F
0178:  BRA    0170
017A:  INCF   2B,F
017C:  BRA    0162
....................    } 
....................         
....................          
.................... } 
017E:  BCF    FF0.0
0180:  GOTO   0064
.................... #INT_EXT2 HIGH 
.................... void ext_int2() 
.................... { 
....................    for(int8 i=0;i<10;i++){ 
0184:  CLRF   2E
0186:  MOVF   2E,W
0188:  SUBLW  09
018A:  BNC   01A2
....................        output_toggle(PIN_D7); 
018C:  BCF    F95.7
018E:  BTG    F8C.7
....................         delay_ms(1000); 
0190:  MOVLW  04
0192:  MOVWF  2F
0194:  MOVLW  FA
0196:  MOVWF  30
0198:  RCALL  0134
019A:  DECFSZ 2F,F
019C:  BRA    0194
019E:  INCF   2E,F
01A0:  BRA    0186
....................    } 
....................         
....................        
01A2:  BCF    FF0.1
01A4:  GOTO   00F2
.................... } 
....................  
....................  
.................... void init() 
.................... { 
....................     set_tris_b(0xFF); 
01A8:  MOVLW  FF
01AA:  MOVWF  F93
....................     set_tris_d(0x00); 
01AC:  MOVLW  00
01AE:  MOVWF  F95
....................     PORTD=0x00; 
01B0:  CLRF   F83
....................     enable_interrupts(GLOBAL); 
01B2:  MOVLW  C0
01B4:  IORWF  FF2,F
....................     enable_interrupts(INT_EXT1); 
01B6:  BSF    FF0.3
....................     enable_interrupts(INT_EXT2); 
01B8:  BSF    FF0.4
....................     ext_int_edge(1,L_TO_H); 
01BA:  BSF    FF1.5
....................     ext_int_edge(2,L_TO_H); 
01BC:  BSF    FF1.4
01BE:  GOTO   01DA (RETURN)
.................... } 

Configuration Fuses:
   Word  1: 0E24   PLL5 CPUDIV1 USBDIV HSPLL NOFCMEN NOIESO
   Word  2: 1E39   NOPUT NOBROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8000   CCP2B3 NOPBADEN NOLPT1OSC MCLR
   Word  4: 0020   NOSTVREN NOLVP ICSP2 NOXINST DEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

   Some fuses have been forced to be compatible with the ICD debugger.
