CCS PCH C Compiler, Version 5.011, 5967               13-Ã·˙-21 03:11

               Filename:   F:\Embedded Systems\≈Ò„·ÛÙÁÒÈÔ\≈Ò„·ÛÙÁÒÈÔ 5\¡ÛÍ1\Ask5_1.lst

               ROM used:   930 bytes (3%)
                           Largest free fragment is 31002
               RAM used:   68 (3%) at main() level
                           81 (4%) worst case
               Stack used: 3 locations (1 in main + 2 for interrupts)
               Stack size: 30

*
0000:  GOTO   0318
*
0008:  GOTO   009A
000C:  NOP   
000E:  NOP   
0010:  NOP   
0012:  NOP   
0014:  NOP   
0016:  NOP   
0018:  MOVWF  04
001A:  MOVFF  FD8,05
001E:  MOVFF  FE0,06
0022:  MOVLB  0
0024:  MOVFF  FE9,0C
0028:  MOVFF  FEA,07
002C:  MOVFF  FE1,08
0030:  MOVFF  FE2,09
0034:  MOVFF  FD9,0A
0038:  MOVFF  FDA,0B
003C:  MOVFF  FF3,12
0040:  MOVFF  FF4,13
0044:  MOVFF  FFA,14
0048:  MOVFF  00,0E
004C:  MOVFF  01,0F
0050:  MOVFF  02,10
0054:  MOVFF  03,11
0058:  MOVFF  0E,00
005C:  MOVFF  0F,01
0060:  MOVFF  10,02
0064:  MOVFF  11,03
0068:  MOVFF  0C,FE9
006C:  MOVFF  07,FEA
0070:  BSF    07.7
0072:  MOVFF  08,FE1
0076:  MOVFF  09,FE2
007A:  MOVFF  0A,FD9
007E:  MOVFF  0B,FDA
0082:  MOVFF  12,FF3
0086:  MOVFF  13,FF4
008A:  MOVFF  14,FFA
008E:  MOVF   04,W
0090:  MOVFF  06,FE0
0094:  MOVFF  05,FD8
0098:  RETFIE 0
009A:  MOVWF  16
009C:  MOVFF  FD8,17
00A0:  MOVFF  FE0,18
00A4:  MOVLB  0
00A6:  MOVFF  FE9,1E
00AA:  MOVFF  FEA,19
00AE:  MOVFF  FE1,1A
00B2:  MOVFF  FE2,1B
00B6:  MOVFF  FD9,1C
00BA:  MOVFF  FDA,1D
00BE:  MOVFF  FF3,24
00C2:  MOVFF  FF4,25
00C6:  MOVFF  FFA,26
00CA:  MOVFF  00,20
00CE:  MOVFF  01,21
00D2:  MOVFF  02,22
00D6:  MOVFF  03,23
00DA:  BTFSS  FF2.5
00DC:  GOTO   00E6
00E0:  BTFSC  FF2.2
00E2:  GOTO   01B2
00E6:  MOVFF  20,00
00EA:  MOVFF  21,01
00EE:  MOVFF  22,02
00F2:  MOVFF  23,03
00F6:  MOVFF  1E,FE9
00FA:  MOVFF  19,FEA
00FE:  BSF    19.7
0100:  MOVFF  1A,FE1
0104:  MOVFF  1B,FE2
0108:  MOVFF  1C,FD9
010C:  MOVFF  1D,FDA
0110:  MOVFF  24,FF3
0114:  MOVFF  25,FF4
0118:  MOVFF  26,FFA
011C:  MOVF   16,W
011E:  MOVFF  18,FE0
0122:  MOVFF  17,FD8
0126:  RETFIE 0
.................... #include <main-proteus.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
0128:  CLRF   01
012A:  CLRF   02
012C:  CLRF   00
012E:  CLRF   03
0130:  MOVF   4F,W
0132:  BNZ   0138
0134:  MOVF   4E,W
0136:  BZ    0168
0138:  MOVLW  10
013A:  MOVWF  50
013C:  BCF    FD8.0
013E:  RLCF   4C,F
0140:  RLCF   4D,F
0142:  RLCF   00,F
0144:  RLCF   03,F
0146:  MOVF   4F,W
0148:  SUBWF  03,W
014A:  BNZ   0150
014C:  MOVF   4E,W
014E:  SUBWF  00,W
0150:  BNC   0160
0152:  MOVF   4E,W
0154:  SUBWF  00,F
0156:  BTFSS  FD8.0
0158:  DECF   03,F
015A:  MOVF   4F,W
015C:  SUBWF  03,F
015E:  BSF    FD8.0
0160:  RLCF   01,F
0162:  RLCF   02,F
0164:  DECFSZ 50,F
0166:  BRA    013C
0168:  RETURN 0
016A:  MOVF   4C,W
016C:  MULWF  4E
016E:  MOVFF  FF3,01
0172:  MOVFF  FF4,00
0176:  MULWF  4F
0178:  MOVF   FF3,W
017A:  ADDWF  00,F
017C:  MOVF   4D,W
017E:  MULWF  4E
0180:  MOVF   FF3,W
0182:  ADDWFC 00,W
0184:  MOVWF  02
0186:  RETURN 0
0188:  MOVF   4B,W
018A:  CLRF   01
018C:  SUBWF  4A,W
018E:  BC    0196
0190:  MOVFF  4A,00
0194:  BRA    01AE
0196:  CLRF   00
0198:  MOVLW  08
019A:  MOVWF  4C
019C:  RLCF   4A,F
019E:  RLCF   00,F
01A0:  MOVF   4B,W
01A2:  SUBWF  00,W
01A4:  BTFSC  FD8.0
01A6:  MOVWF  00
01A8:  RLCF   01,F
01AA:  DECFSZ 4C,F
01AC:  BRA    019C
01AE:  GOTO   0288 (RETURN)
....................  
.................... #list 
....................  
.................... #DEVICE HIGH_INTS=TRUE 
....................  #device icd=2 
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                     //No Watch Dog Timer 
.................... #FUSES WDT32768                    //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HSPLL                     //High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES NOPROTECT                 //Code not protected from reading 
.................... #FUSES BROWNOUT                //No brownout reset 
.................... //#FUSES BORV20                    //Brownout reset at 2.0V 
.................... #FUSES NOPUT                     //No Power Up Timer 
.................... #FUSES NOCPD                     //No EE protection 
.................... #FUSES STVREN                    //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                   //No Debug mode for ICD 
.................... #FUSES NOLVP                     //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                     //Program memory not write protected 
.................... #FUSES NOWRTD                    //Data EEPROM not write protected 
.................... #FUSES NOIESO                      //Internal External Switch Over mode enabled 
.................... #FUSES NOFCMEN                     //Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN                 ///PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                    //configuration not registers write protected 
.................... #FUSES NOWRTB                    //Boot block not write protected 
.................... #FUSES NOEBTR                    //Memory not protected from table reads 
.................... #FUSES NOEBTRB                   //Boot block not protected from table reads 
.................... #FUSES NOCPB                     //No Boot Block code protection 
.................... #FUSES MCLR                      //Master Clear pin enabled 
.................... #FUSES NOLPT1OSC                   //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                   //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL5                      //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV1                   //System Clock by 2 
.................... #FUSES USBDIV                    //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                    //USB voltage regulator enabled 
.................... //#FUSES ICPRT                     //ICPRT enabled 
.................... #FUSES WRTB 
.................... #FUSES NOICPRT  
.................... #FUSES NOLPT1OSC 
.................... #FUSES CCP2B3  
.................... #FUSES NOCPB 
.................... #FUSES NOCPD 
.................... #FUSES NOWRTC 
.................... #FUSES NOWRTD 
.................... #FUSES NOEBTR 
.................... #FUSES NOEBTRB               
....................  
.................... /* systm clock is 48 MHz */ 
.................... #use delay(clock=48000000,RESTART_WDT) 
.................... /* --- BEGIN: changes required for bootloader ------------------------------ */ 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* map reset vector and interrupt vector                                     */ 
.................... /* 0x000-0x7FF is used by the bootloader. The bootloader maps the original   */ 
.................... /* reset vecotr (0x000) to 0x800 and the reset vector (0x008) to 0x800.      */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... #build (reset=0x000, interrupt=0x008) 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* reserve boot block area                                                   */ 
.................... /* This memory range is used by the bootloader, so the application must not  */ 
.................... /* use this area.                                                            */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#org 0  , 0x000 {} 
....................  
.................... /* --- END: changes required for bootloader -------------------------------- */ 
....................  
....................  
....................  
....................  
....................  
.................... #byte PORTB         =0xF81 //√è√±√©√≥√¨√º√≤ √¥√π√≠ √®√µ√±√æ√≠ √¨√• √¥√ß√≠ √®√ù√≥√ß √¥√Ø√µ√≤ √≥√¥√ß√≠ √¨√≠√û√¨√ß. 
.................... #byte PORTC         =0xF82 
.................... #byte PORTD         =0xF83 
.................... //√Ñ√ß√´√æ√≥√•√©√≤ √¨√•√¥√°√¢√´√ß√¥√æ√≠ 
.................... int8  des=0;       //√å√•√¥√°√¢√´√ß√¥√û √∞√Ø√µ √∑√±√ß√≥√©√¨√Ø√∞√Ø√©√•√ü√¥√°√© √°√∞√º √¥√ß√≠ √∞√º√±√¥√° C √£√©√° √≠√° √•√≠√•√±√£√Ø√∞√Ø√©√•√ü 
....................       // √ù√≠√°√≠ √™√ú√®√• √∂√Ø√±√ú √°√∞√º √¥√Ø√µ√≤ √•√≠√§√•√ü√™√¥√•√≤ 1, 2, 3 √°√∞√Ø√≥√¥√ù√´√´√Ø√≠√¥√°√≤ √¨√• √¥√ß√≠ √≥√•√©√±√ú √´√Ø√£√©√™√º 1 
....................       // √≥√¥√©√≤ √¢√ú√≥√•√©√≤ √¥√π√≠ √¥√±√°√≠√¶√ü√≥√¥√Ø√± √∞√Ø√µ √≥√µ√≠√§√ù√Ø√µ√≠ √¥√©√≤ √™√°√®√º√§√Ø√µ√≤ √¥√π√≠ √¥√±√©√æ√≠ √•√≠√§√•√©√™√¥√æ√≠  
....................       // √∞√±√Ø√≤ √¥√ß√≠ √£√ß. 
....................  
.................... int16 tenthseconds,tenthseconds_stop=0; //√å√• √¥√ß√≠ √¨√•√¥√°√¢√´√ß√¥√û tenthseconds √¨√•√¥√±√ú√¨√• √§√ù√™√°√¥√°  
....................                   //√¥√Ø√µ √§√•√µ√¥√•√±√Ø√´√ù√∞√¥√Ø√µ. 
....................                 // √î√ß√≠ √¨√•√¥√°√¢√´√ß√¥√û tenthseconds_stop √¥√ß√≠ √∑√±√ß√≥√©√¨√Ø√∞√Ø√©√Ø√Ω√¨√• √£√©√° 
....................                 // √≠√° √°√∞√Ø√®√ß√™√•√Ω√≥√Ø√µ√¨√• √¥√ß√≠ √¥√©√¨√û √¥√Ø√µ √∑√±√º√≠√Ø√µ √º√¥√°√≠ √Ø  
....................                 //√°√™√±√Ø√§√ù√™√¥√ß√≤ RD0 √¨√•√¥√°√¢√•√ü √°√∞√º 0 √≥√• 1. 
.................... int8 counter;      // √¨√•√¥√°√¢√´√ß√¥√û √£√©√° √≠√° √¨√•√¥√±√ú√¨√• 20 √§√©√°√™√Ø√∞√ù√≤ √∞√Ø√µ √≥√µ√¨√¢√°√ü√≠√Ø√µ√≠ √™√ú√®√• 5 ms 
....................          //√™√ú√®√• 20 √§√©√°√™√Ø√∞√ù√≤ √ù√∑√•√© √∞√•√±√ú√≥√•√© √ù√≠√° √§√ù√™√°√¥√Ø √¥√Ø√µ √§√•√µ√¥√•√±√Ø√´√ù√∞√¥√Ø√µ(=100 ms) 
.................... int1 start=0;       // √á √¨√•√¥√°√¢√´√ß√¥√û start √£√ü√≠√•√¥√°√© 1 √º√¥√°√≠ √Æ√•√™√©√≠√û√≥√•√© √Ø √¨√•√¥√±√ß√¥√û√≤ √™√°√© √∞√°√±√°√¨√ù√≠√•√© √£√©√° √∞√ú√≠√¥√° 1 
.................... int1 stop=0;       // √á √¨√•√¥√°√¢√´√ß√¥√û stop √∞√°√ü√±√≠√•√© √¥√ß√≠ √¥√©√¨√û 1 √º√¥√°√≠ √£√ü√≠√•√© RD0=1 
....................                  // √î√º√¥√• √≥√¥√°√¨√°√¥√ú√•√© √≠√° √¨√•√¥√°√∂√ù√±√•√¥√°√© √ß √¥√±√ù√∑√Ø√µ√≥√° √¥√©√¨√û √¥√Ø√µ √¨√•√¥√±√ß√¥√û √≥√¥√Ø√µ√≤ √•√≠√§√•√ü√™√¥√•√≤. 
....................                  // √è√© √•√≠√§√•√ü√™√¥√•√≤ √£√©√° stop =1 √•√¨√∂√°√≠√ü√¶√Ø√µ√≠ √¥√ß√≠ √¥√©√¨√û √™√°√¥√ú √¥√ß√≠ √≥√¥√©√£√¨√û  
....................                 //√¨√•√¥√ú√¢√°√≥√ß√≤ √¥√Ø√µ RD0 √°√∞√º 0 √≥√• 1. √Ñ√ß√´√°√§√û √º√¥√°√≠ stop=1 "√∞√°√£√æ√≠√Ø√µ√≠" √Ø√© √•√≠√§√•√ü√™√¥√•√≤. 
.................... int8 table[16] ={ 0b00111111,   //√ê√ü√≠√°√™√°√≤ √¨√• √¥√Ø√µ √™√æ√§√©√™√•√≤ √£√©√° √•√¨√∂√ú√≠√©√≥√ß √≥√• √•√≠√§√•√ü√™√¥√ß 7 √¥√Ø√¨√ù√π√≠ 
....................                         0b00000110,   //√¥√π√≠ √∏√ß√∂√ü√π√≠ 0, 1, 2, ‚Ä¶ 9, ‚Ä¶ F. 
....................                              0b01011011,  
....................                              0b01001111,  
....................                              0b01100110,  
....................                              0b01101101,  
....................                              0b01111101,  
....................                              0b00000111,  
....................                              0b01111111,  
....................                              0b01101111,  
....................                              0b01110111,  
....................                              0b01111100,  
....................                              0b00111001,  
....................                              0b01011110,  
....................                              0b01111001,  
....................                              0b01110001};   
.................... int8 dig[3] = {1,2,4}; // √∞√ü√≠√°√™√°√≤ √¨√• √¥√©√≤ √¥√©√¨√ù√≤  0000 0001, 0000 0010, 0000 0100 √£√©√° √•√≠√•√±√£√Ø√∞√Ø√ü√ß√≥√ß 
....................              // √°√∞√º √¥√Ø√µ√≤ √°√™√±√Ø√§√ù√™√¥√•√≤ √¥√ß√≤ √∞√º√±√¥√°√≤ C √¨√• √¥√ß√≠ √≥√•√©√±√ú √•√≠√º√≤ √™√ú√®√• √∂√Ø√±√ú √°√∞√º  
....................             // √¥√Ø√µ√≤ √¥√±√•√©√≤ √•√≠√§√•√ü√™√¥√•√≤ √™√Ø√©√≠√û√≤ √™√°√®√º√§√Ø√µ. √Ö√∂√°√±√¨√º√¶√Ø√≠√¥√°√© 5 V √≥√¥√ß√≠ √¢√ú√≥√ß √¥√Ø√µ  
....................             //√°√≠√¥√ü√≥√¥√Ø√©√∑√Ø√µ √¥√±√°√≠√¶√ü√≥√¥√Ø√± √™√°√© √°√µ√¥√º √ù√±√∑√•√¥√°√© √≥√¥√Ø√≠ √™√º√±√Ø √≥√µ√≠√§√ù√Ø√≠√¥√°√≤ √¥√ß√≠ √™√Ø√©√≠√û 
....................             //√™√ú√®√Ø√§√Ø √¥√Ø√µ √•√≠√§√•√ü√™√¥√ß √∞√±√Ø√≤ √¥√ß√≠ √£√ß. 
.................... // √Ñ√û√´√π√≥√ß √≥√µ√≠√°√±√¥√û√≥√•√π√≠ 
.................... void timer0_int(void); 
.................... void init (void); 
.................... // √ä√Ω√±√©√° √≥√µ√≠√ú√±√¥√ß√≥√ß 
.................... void main() 
*
0318:  CLRF   FF8
031A:  BSF    FF1.2
031C:  BSF    FD0.7
031E:  BSF    07.7
0320:  CLRF   28
0322:  CLRF   2C
0324:  CLRF   2B
0326:  BCF    2E.0
0328:  BCF    2E.1
032A:  MOVF   FC1,W
032C:  ANDLW  C0
032E:  IORLW  0F
0330:  MOVWF  FC1
0332:  MOVLW  07
0334:  MOVWF  FB4
0336:  MOVLW  3F
0338:  MOVWF  2F
033A:  MOVLW  06
033C:  MOVWF  30
033E:  MOVLW  5B
0340:  MOVWF  31
0342:  MOVLW  4F
0344:  MOVWF  32
0346:  MOVLW  66
0348:  MOVWF  33
034A:  MOVLW  6D
034C:  MOVWF  34
034E:  MOVLW  7D
0350:  MOVWF  35
0352:  MOVLW  07
0354:  MOVWF  36
0356:  MOVLW  7F
0358:  MOVWF  37
035A:  MOVLW  6F
035C:  MOVWF  38
035E:  MOVLW  77
0360:  MOVWF  39
0362:  MOVLW  7C
0364:  MOVWF  3A
0366:  MOVLW  39
0368:  MOVWF  3B
036A:  MOVLW  5E
036C:  MOVWF  3C
036E:  MOVLW  79
0370:  MOVWF  3D
0372:  MOVLW  71
0374:  MOVWF  3E
0376:  MOVLW  01
0378:  MOVWF  3F
037A:  MOVLW  02
037C:  MOVWF  40
037E:  MOVLW  04
0380:  MOVWF  41
.................... { 
....................       init();  //√±√Ø√µ√¥√ü√≠√° √°√±√∑√©√™√Ø√∞√Ø√ü√ß√≥√ß√≤ √¨√• √°√±√∑√©√™√ù√≤ √¥√©√¨√ù√≤ 
0382:  BRA    02E2
....................     
....................      while (TRUE){     
....................    if ((INPUT(PIN_D0)==0) && (start==0)){   //√Å√µ√¥√û √ß √≥√µ√≠√®√û√™√ß √©√≥√∑√Ω√•√© √≥√¥√Ø √Æ√•√™√ü√≠√ß√¨√° √º√¥√°√≠ RD0=0 
0384:  BSF    F95.0
0386:  BTFSC  F83.0
0388:  BRA    0392
038A:  BTFSC  2E.0
038C:  BRA    0392
....................                   // √™√°√© start=0 
....................    start=1;                  // √ì√¥√Ø √Æ√•√™√ü√≠√ß√¨√° √£√ü√≠√•√¥√° start=1 √™√°√© √§√•√≠ √°√´√´√ú√¶√•√© √∞√Ø√¥√ù. 
038E:  BSF    2E.0
....................          } 
0390:  BRA    03A2
....................    else if(start == 1 && INPUT(PIN_D0) == 1){             //√Å√µ√¥√º √≥√µ√¨√¢√°√ü√≠√•√© √º√¥√°√≠ √£√ü√≠√•√© RD0=1 
0392:  BTFSS  2E.0
0394:  BRA    03A0
0396:  BSF    F95.0
0398:  BTFSS  F83.0
039A:  BRA    03A0
....................                     stop = 1; // √Å√≠ √ß √¨√•√¥√°√¢√´√ß√¥√û stop √•√ü√≠√°√© 1  
039C:  BSF    2E.1
....................                                   // √Ø√© √•√≠√§√•√ü√™√¥√•√≤ √§√•√≠ √•√¨√∂√°√≠√ü√¶√Ø√µ√≠  
....................                       // √¥√ß√≠ √¥√±√ù√∑√Ø√µ√≥√° √¥√©√¨√û √∑√±√º√≠√Ø√µ √°√´√´√ú 
....................                      // √•√¨√∂√°√≠√ü√¶√Ø√µ√≠ √¥√ß√≠ √¥√©√¨√û √∑√±√º√≠√Ø√µ √™√°√¥√ú √¥√ß√≠                     // √∞√±√Ø√ß√£√Ø√Ω√¨√•√≠√ß √≥√¥√©√£√¨√û √¨√•√¥√ú√¢√°√≥√ß√≤ 
....................                      // √¥√Ø√µ √°√™√±√Ø√§√ù√™√¥√ß RD0 √°√∞√º 0 √≥√• 1 
....................                   } 
039E:  BRA    03A2
....................                   else {         //√Å√µ√¥√º √≥√µ√¨√¢√°√ü√≠√•√© √º√¥√°√≠ RD0=0 
....................                      stop = 0;  //√è√© √•√≠√§√•√ü√™√¥√•√≤ √•√¨√∂√°√≠√ü√¶√Ø√µ√≠ √¥√ß√≠ 
03A0:  BCF    2E.1
....................                            // √¥√±√ù√∑√Ø√µ√≥√° √¥√©√¨√û √∑√±√º√≠√Ø√µ.  
....................                                 }          
03A2:  BRA    0384
....................       }     //√™√´√•√ü√≠√•√© √ß while 
.................... }           //√™√´√•√ü√≠√•√© √ß main 
.................... // √è√±√©√≥√¨√º√≤ √≥√µ√≠√°√±√¥√û√≥√•√π√≠  
.................... #INT_TIMER0 HIGH   // √Ñ√©√°√™√Ø√∞√û √¨√• √¨√•√£√ú√´√ß √∞√±√Ø√¥√•√±√°√©√º√¥√ß√¥√° √°√∞√º √¥√Ø√≠ Timer0 
.................... void timer0_int(void){ 
03A4:  BRA    03A4
....................       int16 mon,dec,eka;  // √å√•√¥√°√¢√´√ß√¥√ù√≤ √£√©√° √°√∞√Ø√®√û√™√•√µ√≥√ß √¨√Ø√≠√ú√§√π√≠, √§√•√™√ú√§√π√≠, √•√™√°√¥√Ø√≠√¥√ú√§√π√≠ 
....................       counter--; // √ä√ú√®√• 20 * 5 msec  = 0,1 sec  
*
01B2:  DECF   2D,F
....................             // √Ñ√©√°√™√Ø√∞√ù√≤ √≥√µ√¨√¢√°√ü√≠√Ø√µ√≠ √™√ú√®√• 5 ms. O counter √∞√°√ü√±√≠√•√© √¥√ß√≠ √°√±√∑√©√™√û √¥√©√¨√û 20 
....................            // √ä√ú√®√• 20 √§√©√°√™√Ø√∞√ù√≤ √ù√∑√Ø√µ√≠ √∞√•√±√ú√≥√•√© 20√ó5ms=100ms=0,1 s. 
....................       if (counter == 0){  // √™√ú√®√• √∂√Ø√±√ú √∞√Ø√µ √¨√ß√§√•√≠√ü√¶√•√¥√°√© √Ø counter √ù√∑√Ø√µ√≠ √∞√•√±√ú√≥√•√© 0,1 s 
01B4:  MOVF   2D,F
01B6:  BNZ   01DA
....................             if (start == 1){ //√Å√≠ √¥√±√ù√∑√•√© √Ø √¨√•√¥√±√ß√¥√û√≤  
01B8:  BTFSS  2E.0
01BA:  BRA    01C2
....................             tenthseconds++; // √°√µ√Æ√ú√≠√•√¥√°√©  √™√°√¥√ú 1 √™√ú√®√• 0,1 sec(=20 √§√©√°√™√Ø√∞√ù√≤) 
01BC:  INCF   29,F
01BE:  BTFSC  FD8.2
01C0:  INCF   2A,F
....................                                        } 
....................             counter = 20; //√°√≠ √£√ü√≠√Ø√µ√≠ 20 √§√©√°√™√Ø√∞√ù√≤, √§√ß√´√°√§√û counter=0 
01C2:  MOVLW  14
01C4:  MOVWF  2D
....................                          //√Ø √¨√•√¥√±√ß√¥√û√≤ √§√©√°√™√Ø√∞√æ√≠ √Æ√°√≠√°√∞√°√ü√±√≠√•√© √¥√ß√≠ √¥√©√¨√û 20 
....................             if (tenthseconds > 999){              // √è √¨√•√¥√±√ß√¥√û√≤ √¨√•√¥√ú √¥√ß√≠ √¥√©√¨√û 999 
01C6:  MOVF   2A,W
01C8:  SUBLW  02
01CA:  BC    01DA
01CC:  XORLW  FF
01CE:  BNZ   01D6
01D0:  MOVF   29,W
01D2:  SUBLW  E7
01D4:  BC    01DA
....................                      tenthseconds = 0;  // √Æ√°√≠√°√∞√°√ü√±√≠√•√© √¥√ß√≠ √¥√©√¨√û 0. 
01D6:  CLRF   2A
01D8:  CLRF   29
....................                               }               
....................             } 
....................       if (stop == 0){                         
01DA:  BTFSC  2E.1
01DC:  BRA    01E6
....................                    tenthseconds_stop = tenthseconds;   // ¬º√¥√°√≠ √•√ü√≠√°√© stop=0(√§√ß√´√°√§√û RD0=0)     
01DE:  MOVFF  2A,2C
01E2:  MOVFF  29,2B
....................                             //√°√∞√Ø√®√ß√™√•√Ω√•√¥√°√© √≥√µ√≠√•√∑√æ√≤ √ß √¥√±√ù√∑√Ø√µ√≥√° 
....................                             //√¥√©√¨√û √¥√Ø√µ √¨√•√¥√±√ß√¥√û √≥√¥√ß√≠ 
....................                             // √¨√•√¥√°√¢√´√ß√¥√û seconds_stop.  
....................                            // √á √ù√≠√§√•√©√Æ√ß √¥√Ø√µ √¨√•√¥√±√ß√¥√û √®√° √¥√±√ù√∑√•√© 
....................                             // ¬º√¥√°√≠ √£√ü√≠√•√© stop=1(√§√ß√´√°√§√û RD0=1) √ß √¨√•√¥√°√¢√´√ß√¥√û  
....................                             //tenthseconds √™√±√°√¥√ú√•√© √≥√¥√°√®√•√±√ú √¥√ß√≠ √¥√©√¨√û  
....................                                        //√∞√Ø√µ √•√ü√∑√• √™√°√¥√ú √¥√ß√≠ √≥√¥√©√£√¨√û √¥√ß√≤ √¨√•√¥√ú√¢√°√≥√ß√≤ 
....................                            //√¥√Ø√µ √°√™√±√Ø√§√ù√™√¥√ß RD0 √°√∞√º 0 √≥√• 1 
....................                            // √Ö√∞√Ø√¨√ù√≠√π√≤ √º√¥√°√≠ RD0=1 √ß √ù√≠√§√•√©√Æ√ß √®√° √∞√°√±√°√¨√ù√≠√•√© 
....................                            // √∞√°√£√π√¨√ù√≠√ß(√≥√¥√°√®√•√±√û) 
....................                   }                
....................           eka = (int8) (tenthseconds_stop /100);    //√ï√∞√Ø√´√Ø√£√©√≥√¨√º√≤ √¥√π√≠ √•√™√°√¥√Ø√≠√¥√ú√§√π√≠ √¥√Ø√µ √¨√•√¥√±√ß√¥√û 
01E6:  MOVFF  2C,4D
01EA:  MOVFF  2B,4C
01EE:  CLRF   4F
01F0:  MOVLW  64
01F2:  MOVWF  4E
01F4:  RCALL  0128
01F6:  MOVFF  02,49
01FA:  MOVFF  01,48
....................           dec = (int8) ((tenthseconds_stop - (100*eka))/10); //√ï√∞√Ø√´√Ø√£√©√≥√¨√º√≤ √¥√π√≠ √§√•√™√ú√§√π√≠ √¥√Ø√µ 
01FE:  CLRF   4D
0200:  MOVLW  64
0202:  MOVWF  4C
0204:  MOVFF  49,4F
0208:  MOVFF  48,4E
020C:  RCALL  016A
020E:  MOVFF  02,03
0212:  MOVF   01,W
0214:  SUBWF  2B,W
0216:  MOVWF  4A
0218:  MOVF   02,W
021A:  SUBWFB 2C,W
021C:  MOVWF  4B
021E:  MOVWF  4D
0220:  MOVFF  4A,4C
0224:  CLRF   4F
0226:  MOVLW  0A
0228:  MOVWF  4E
022A:  RCALL  0128
022C:  MOVFF  02,47
0230:  MOVFF  01,46
....................                            // √¨√•√¥√±√ß√¥√û 
....................           mon = (int8) (tenthseconds_stop - (100 * eka) -(10 * dec)); //√ï√∞√Ø√´√Ø√£√©√≥√¨√º√≤ √¥√π√≠ √¨√Ø√≠√ú√§√π√≠  
0234:  CLRF   4D
0236:  MOVLW  64
0238:  MOVWF  4C
023A:  MOVFF  49,4F
023E:  MOVFF  48,4E
0242:  RCALL  016A
0244:  MOVFF  02,03
0248:  MOVF   01,W
024A:  SUBWF  2B,W
024C:  MOVWF  4A
024E:  MOVF   02,W
0250:  SUBWFB 2C,W
0252:  MOVWF  4B
0254:  CLRF   4D
0256:  MOVLW  0A
0258:  MOVWF  4C
025A:  MOVFF  47,4F
025E:  MOVFF  46,4E
0262:  RCALL  016A
0264:  MOVF   01,W
0266:  SUBWF  4A,W
0268:  MOVWF  00
026A:  MOVF   02,W
026C:  SUBWFB 4B,W
026E:  MOVF   00,W
0270:  CLRF   45
0272:  MOVWF  44
....................                                            // √¥√Ø√µ √¨√•√¥√±√ß√¥√û 
....................           set_timer0(5536); // √Å√±√∑√©√™√û √¥√©√¨√û √¥√Ø√µ timer0 √£√©√° √≠√° √ù√∑√Ø√µ√¨√• √§√©√°√™√Ø√∞√ù√≤ √™√ú√®√• 5 ms 
0274:  MOVLW  15
0276:  MOVWF  FD7
0278:  MOVLW  A0
027A:  MOVWF  FD6
....................          des = ++des%3;  //√å√•√¥√°√¢√´√ß√¥√û des √∞√°√ü√±√≠√•√© √¥√©√≤ √¥√©√¨√ù√≤ 0, 1, 2, 0, 1, 2 ,0, 1, 2,‚Ä¶ 
027C:  INCF   28,F
027E:  MOVFF  28,4A
0282:  MOVLW  03
0284:  MOVWF  4B
0286:  BRA    0188
0288:  MOVFF  00,28
....................             //%3 √≥√ß√¨√°√ü√≠√•√© modulo 3(√µ√∞√º√´√Ø√©√∞√Ø √§√©√°√ü√±√•√≥√ß√≤ √¨√• √¥√Ø 3) 
....................       PORTC = dig[des]; //√á √∞√º√±√¥√° C √∞√°√ü√±√≠√•√© √¥√©√¨√ù√≤ 0000 0001, 0000 0010, 0000 0100,‚Ä¶ 
028C:  CLRF   03
028E:  MOVF   28,W
0290:  ADDLW  3F
0292:  MOVWF  FE9
0294:  MOVLW  00
0296:  ADDWFC 03,W
0298:  MOVWF  FEA
029A:  MOVFF  FEF,F82
....................                // √§√ß√´√°√§√û √¥√©√≤ √¥√©√¨√ù√≤ 1, 2, 4, 1, 2, 4 ,‚Ä¶ √°√∞√º √¥√Ø√≠ √∞√ü√≠√°√™√° dig  
....................              //√á √∞√º√±√¥√° C √•√∞√©√´√ù√£√•√© √≥√• √∞√Ø√©√Ø√≤ √•√≠√§√•√ü√™√¥√ß√≤ √®√° √°√≠√ú√∏√•√©. 
.................... // √Ö√¨√∂√ú√≠√©√≥√ß √¨√Ø√≠√ú√§√π√≠, √§√•√™√ú√§√π√≠, √•√™√°√¥√Ø√≠√¥√ú√§√π√≠ √≥√¥√Ø√µ√≤ √•√≠√§√•√ü√™√¥√•√≤ 
....................       if (des==0){                                //PORTC=0000 0001(=dig[0]), √•√∞√©√´√Ø√£√û √•√≠√§√•√ü√™√¥√ß √¨√Ø√≠√ú√§√π√≠ 
029E:  MOVF   28,F
02A0:  BNZ   02B2
....................          PORTB = table[mon]; //√Å√≠ des=0 √•√≠√•√±√£√Ø√∞√Ø√©√•√ü√¥√°√© √Ø √•√≠√§√•√ü√™√¥√ß√≤ √¥√π√≠ √¨√Ø√≠√ú√§√π√≠ 
02A2:  MOVLW  2F
02A4:  ADDWF  44,W
02A6:  MOVWF  FE9
02A8:  MOVLW  00
02AA:  ADDWFC 45,W
02AC:  MOVWF  FEA
02AE:  MOVFF  FEF,F81
....................                         //PORTC=0000 0001(=dig[0]) 
....................                        }          
....................       if (des==1){                         //PORTC=0000 0010(=dig[1]), √•√∞√©√´√Ø√£√û √•√≠√§√•√ü√™√¥√ß √§√•√™√ú√§√π√≠ 
02B2:  DECFSZ 28,W
02B4:  BRA    02C6
....................          PORTB = table[dec]; //√Å√≠ des=1 √•√≠√•√±√£√Ø√∞√Ø√©√•√ü√¥√°√© √Ø √•√≠√§√•√ü√™√¥√ß√≤ √¥√π√≠ √§√•√™√ú√§√π√≠ 
02B6:  MOVLW  2F
02B8:  ADDWF  46,W
02BA:  MOVWF  FE9
02BC:  MOVLW  00
02BE:  ADDWFC 47,W
02C0:  MOVWF  FEA
02C2:  MOVFF  FEF,F81
....................                                                 }             
....................       if (des==2){                         //PORTC=0000 0010(=dig[2]), √•√∞√©√´√Ø√£√û √•√≠√§√•√ü√™√¥√ß √•√™√°√¥√Ø√≠√¥√ú√§√π√≠ 
02C6:  MOVF   28,W
02C8:  SUBLW  02
02CA:  BNZ   02DC
....................          PORTB = table[eka]; //√Å√≠ des=2 √•√≠√•√±√£√Ø√∞√Ø√©√•√ü√¥√°√© √Ø √•√≠√§√•√ü√™√¥√ß√≤ √¥√π√≠ √•√™√°√¥√Ø√≠√¥√ú√§√π√≠ 
02CC:  MOVLW  2F
02CE:  ADDWF  48,W
02D0:  MOVWF  FE9
02D2:  MOVLW  00
02D4:  ADDWFC 49,W
02D6:  MOVWF  FEA
02D8:  MOVFF  FEF,F81
....................                       //PORTC=0000 0100(=dig[2]) 
....................          }                
02DC:  BCF    FF2.2
02DE:  GOTO   00E6
.................... }                      
.................... // √ì√µ√≠√ú√±√¥√ß√≥√ß √°√±√∑√©√™√Ø√∞√Ø√ü√ß√≥√ß√≤ 
.................... void init (void){ 
....................    set_tris_b(0x00);        // √ä√°√®√Ø√±√©√≥√¨√º√≤ √¥√ß√≤ √∞√º√±√¥√°√≤ √Ç √π√≤ √ù√Æ√Ø√§√Ø√≤ 
02E2:  MOVLW  00
02E4:  MOVWF  F93
....................     set_tris_c(0x00);        // √ä√°√®√Ø√±√©√≥√¨√º√≤ √¥√ß√≤ √∞√º√±√¥√°√≤ C √π√≤ √ù√Æ√Ø√§√Ø√≤ 
02E6:  MOVWF  F94
....................     set_tris_d(0x0f);        // √ä√°√®√Ø√±√©√≥√¨√º√≤ √¥√ß√≤ √∞√º√±√¥√°√≤ C √π√≤ √ù√Æ√Ø√§√Ø√≤ 
02E8:  MOVLW  0F
02EA:  MOVWF  F95
....................     PORTB = 0;           //√Å√±√∑√©√™√û √¥√©√¨√û √∞√º√±√¥√°√≤ √Ç 
02EC:  CLRF   F81
....................     PORTC = 0;          // √Å√±√∑√©√™√û √¥√©√¨√û √∞√º√±√¥√°√≤ C 
02EE:  CLRF   F82
....................     counter = 20;          // √Å√±√∑√©√™√û √¥√©√¨√û √¥√Ø√µ counter 
02F0:  MOVLW  14
02F2:  MOVWF  2D
....................     tenthseconds = 0;    //√Å√±√∑√©√™√û √¥√©√¨√û √¨√•√¥√±√ß√¥√û √§√•√™√ú√¥√π√≠ √§√•√µ√¥√•√±√Ø√´√ù√∞√¥√Ø√µ 
02F4:  CLRF   2A
02F6:  CLRF   29
....................     tenthseconds_stop = 0; //√Å√±√∑√©√™√û √¥√©√¨√û √¥√ß√≤ √¨√•√¥√°√¢√´√ß√¥√û√≤ tenthseconds_stop 
02F8:  CLRF   2C
02FA:  CLRF   2B
....................     start=0; //√™√°√¥√ú √¥√ß√≠ √•√™√™√ü√≠√ß√≥√ß start=0. √ì√¥√ß√≠ √≥√µ√≠√ù√∑√•√©√° √£√ü√≠√•√¥√°√© 1 √™√°√© √∞√°√±√°√¨√ù√≠√•√© √∞√ú√≠√¥√° 1 
02FC:  BCF    2E.0
....................     stop=0; //√°√±√∑√©√™√û √¥√©√¨√û √¨√•√¥√°√¢√´√ß√¥√û√≤ stop=0, √§√ß√´√°√§√û √Ø √¨√•√¥√±√ß√¥√û√≤ √•√¨√∂√°√≠√ü√¶√•√¥√°√© √≥√¥√Ø√µ√≤ √•√≠√§√•√ü√™√¥√•√≤. 
02FE:  BCF    2E.1
....................     des =0; //√°√±√∑√©√™√û √¥√©√¨√û √¨√•√¥√°√¢√´√ß√¥√û√≤ √∞√Ø√µ √∑√±√ß√≥√©√¨√Ø√∞√Ø√©√•√ü√¥√°√© √£√©√° √•√∞√©√´√Ø√£√û √•√≠√§√•√ü√™√¥√ß √°√∞√º √¥√ß√≠ √®√Ω√±√° C 
0300:  CLRF   28
....................    SETUP_TIMER_0(T0_INTERNAL | T0_DIV_1 ); //√ë√Ω√®√¨√©√≥√ß prescaler=1 
0302:  MOVLW  88
0304:  MOVWF  FD5
....................    set_timer0(5536);                             //  √Å√±√∑√©√™√û √¥√©√¨√û √¥√Ø√µ  timer √£√©√° √§√©√°√™√Ø√∞√ù√≤ √™√ú√®√• 5 ms 
0306:  MOVLW  15
0308:  MOVWF  FD7
030A:  MOVLW  A0
030C:  MOVWF  FD6
....................           enable_interrupts(INT_TIMER0);  // √Ö√≠√•√±√£√Ø√∞√Ø√ü√ß√≥√ß √¥√ß√≤ √§√©√°√™√Ø√∞√û√≤ √¥√Ø√µ timer0 
030E:  BSF    FF2.5
....................           enable_interrupts(GLOBAL);         // √Ö√≠√•√±√£√Ø√∞√Ø√ü√ß√≥√ß √¥√Ø√µ √£√•√≠√©√™√Ø√Ω                                           // √§√©√°√™√º√∞√¥√ß √¥√π√≠ √§√©√°√™√Ø√∞√æ√≠ 
0310:  MOVLW  C0
0312:  IORWF  FF2,F
0314:  GOTO   0384 (RETURN)
....................              
....................       }         // √™√´√•√ü√≠√•√© √ß √°√£√™√Ω√´√ß √¥√ß√≤ init() 

Configuration Fuses:
   Word  1: 0E24   PLL5 CPUDIV1 USBDIV HSPLL NOFCMEN NOIESO
   Word  2: 1E39   NOPUT NOBROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8000   CCP2B3 NOPBADEN NOLPT1OSC MCLR
   Word  4: 0020   NOSTVREN NOLVP ICSP2 NOXINST DEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

   Some fuses have been forced to be compatible with the ICD debugger.
